*passthru* -- Execute an external program and display raw output

  void passthru(string command [, int return_var])~

The |passthru| function is similar to the |exec| function in that it executes
a {command}. This function should be used in place of |exec| or |system| when
the output from the Unix command is binary data which needs to be passed
directly back to the browser. A common use for this is to execute something
like the pbmplus utilities that can output an image stream directly. By
setting the Content-type to image/gif and then calling a pbmplus program to
output a gif, you can create PHP scripts that output images directly.

{command} The command that will be executed.

{return_var} If the {return_var} argument is present, the return status of the
Unix command will be placed here.

No value is returned.

When allowing user-supplied data to be passed to this function, use
|escapeshellarg| or |escapeshellcmd| to ensure that users cannot trick the
system into executing arbitrary commands.

If a program is started with this function, in order for it to continue
running in the background, the output of the program must be redirected to a
file or another output stream. Failing to do so will cause PHP to hang until
the execution of the program ends.

When safe mode is enabled, you can only execute files within the
safe_mode_exec_dir. For practical reasons, it is currently not allowed to have
.. components in the path to the executable.

With safe mode enabled, the command string is escaped with |escapeshellcmd|.
Thus, echo y | echo x becomes echo y \| echo x.

|exec| |system| |popen| |escapeshellcmd| backtick operator

vim:ft=help:
