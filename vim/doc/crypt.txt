*crypt* -- One-way string hashing

  string crypt(string str [, string salt])~

|crypt| will return a hashed string using the standard Unix DES-based
algorithm or alternative algorithms that may be available on the system.

Some operating systems support more than one type of hash. In fact, sometimes
the standard DES-based algorithm is replaced by an MD5-based algorithm. The
hash type is triggered by the salt argument. Prior to 5.3, PHP would determine
the available algorithms at install-time based on the system's crypt(). If no
salt is provided, PHP will auto-generate either a standard two character (DES)
salt, or a twelve character (MD5), depending on the availability of MD5
crypt(). PHP sets a constant named CRYPT_SALT_LENGTH which indicates the
longest valid salt allowed by the available hashes.

The standard DES-based |crypt| returns the salt as the first two characters of
the output. It also only uses the first eight characters of {str}, so longer
strings that start with the same eight characters will generate the same
result (when the same salt is used).

On systems where the crypt() function supports multiple hash types, the
following constants are set to 0 or 1 depending on whether the given type is
available:

CRYPT_STD_DES - Standard DES-based hash with a two character salt from the
alphabet "./0-9A-Za-z". Using invalid characters in the salt will cause
crypt() to fail.

CRYPT_EXT_DES - Extended DES-based hash. The "salt" is a 9-character string
consisting of an underscore followed by 4 bytes of iteration count and 4 bytes
of salt. These are encoded as printable characters, 6 bits per character,
least significant character first. The values 0 to 63 are encoded as
"./0-9A-Za-z". Using invalid characters in the salt will cause crypt() to
fail.

CRYPT_MD5 - MD5 hashing with a twelve character salt starting with $1$

CRYPT_BLOWFISH - Blowfish hashing with a salt as follows: "$2a$", a two digit
cost parameter, "$", and 22 base 64 digits from the alphabet "./0-9A-Za-z".
Using characters outside of this range in the salt will cause crypt() to
return a zero-length string. The two digit cost parameter is the base-2
logarithm of the iteration count for the underlying Blowfish-based hashing
algorithmeter and must be in range 04-31, values outside this range will cause
crypt() to fail.

vim:ft=help:
