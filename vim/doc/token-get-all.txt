*token_get_all* -- Split given source into PHP tokens

  array token_get_all(string source)~

|token_get_all| parses the given {source} string into PHP language tokens
using the Zend engine"s lexical scanner.

For a list of parser tokens, see , or use |token_name| to translate a token
value into its string representation.

{source} The PHP source to parse.

An array of token identifiers. Each individual token identifier is either a
single character (i.e.: ;, ., >, !, etc...), or a three element array
containing the token index in element 0, the string content of the original
token in element 1 and the line number in element 2.

|token_get_all| examples

<?php >
  $tokens = token_get_all('<?php echo; ?>'); /* => array(
                                                    array(T_OPEN_TAG, '<?php'), 
                                                    array(T_ECHO, 'echo'),
                                                    ';',
                                                    array(T_CLOSE_TAG, '?>') ); */
  
  /* Note in the following example that the string is parsed as T_INLINE_HTML
     rather than the otherwise expected T_COMMENT (T_ML_COMMENT in PHP <5).
     This is because no open/close tags were used in the "code" provided.
     This would be equivalent to putting a comment outside of <?php ?> tags in a normal file. */
  $tokens = token_get_all('/* comment */'); // => array(array(T_INLINE_HTML, '/* comment */'));
?>





Version Description 5.2.2 Line numbers are returned in element 2

vim:ft=help:
