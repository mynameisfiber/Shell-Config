*SQLiteDatabase->busyTimeout* -- Set busy timeout duration, or disable busy
handlers

  void sqlite_busy_timeout(resource dbhandle, int milliseconds)~

Object oriented style (method):

  void busyTimeout(resource dbhandle, int milliseconds, int milliseconds)~

Set the maximum time, in milliseconds, that SQLite will wait for a {dbhandle}
to become ready for use.

{dbhandle} The SQLite Database resource; returned from |sqlite_open| when used
procedurally. This parameter is not required when using the object-oriented
method.

{milliseconds} The number of milliseconds. When set to 0, busy handlers will
be disabled and SQLite will return immediately with a SQLITE_BUSY status code
if another process/thread has the database locked for an update.

PHP sets the default busy timeout to be 60 seconds when the database is
opened.

There are one thousand (1000) milliseconds in one second.

No value is returned.

Procedural style

<?php >
  $dbhandle = sqlite_open('sqlitedb');
  sqlite_busy_timeout($dbhandle, 10000); // set timeout to 10 seconds
  sqlite_busy_timeout($dbhandle, 0); // disable busy handler
?>





Object oriented style

<?php >
  $dbhandle = new SQLiteDatabase('sqlitedb');
  $dbhandle->busyTimeout(10000); // 10 seconds
  $dbhandle->busyTimeout(0); // disable
?>





|sqlite_open|

vim:ft=help:
