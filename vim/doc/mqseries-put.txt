*mqseries_put* -- MQSeries MQPUT

  void mqseries_put(resource hConn, resource hObj, array md, array pmo, string message, resource compCode, resource reason)~

The |mqseries_put| (MQPUT) call puts a message on a queue or distribution
list. The queue or distribution list must already be open.

{hConn} Connection handle.

This handle represents the connection to the queue manager.

{hObj} Object handle.

This handle represents the object to be used.

{md} Message descriptor (MQMD).

{pmo} Put message options (MQPMO).

{message} The actual message to put onto the queue.

{compCode} Completion code.

{reason} Reason code qualifying the compCode.

No value is returned.

|mqseries_put| example

<?php >
  // open connection to the queue manager
      mqseries_conn('WMQ1', $conn, $comp_code, $reason);
  // $conn now hold the reference to the connection to the queue manager.
  
  // open the connectio to the testq queueu
      mqseries_open(
                  $conn,
                  array('ObjectName' => 'TESTQ'),
                  MQSERIES_MQOO_INPUT_AS_Q_DEF | MQSERIES_MQOO_FAIL_IF_QUIESCING | MQSERIES_MQOO_OUTPUT,
                  $obj,
                  $comp_code,
                  $reason);
  // $obj now holds the reference to the object (TESTQ)
  
  // setup the message descriptor array. Check MQSeries reference manuals.
      $md = array(
                  'Version' => MQSERIES_MQMD_VERSION_1,
                  'Expiry' => MQSERIES_MQEI_UNLIMITED,
                  'Report' => MQSERIES_MQRO_NONE,
                  'MsgType' => MQSERIES_MQMT_DATAGRAM,
                  'Format' => MQSERIES_MQFMT_STRING,
                  'Priority' => 1,
                  'Persistence' => MQSERIES_MQPER_PERSISTENT);
  
  // setup the put message options.
      $pmo = array('Options' => MQSERIES_MQPMO_NEW_MSG_ID|MQSERIES_MQPMO_SYNCPOINT);
      
  // put the message 'Ping' on the queueu.
      mqseries_put($conn, $obj, $md, $pmo, 'Ping', $comp_code, $reason);
  
      if ($comp_code !== MQSERIES_MQCC_OK) {
          printf("put CompCode:%d Reason:%d Text:%s<br>\n", $comp_code, $reason, mqseries_strerror($reason));
      }
  
  // close the object reference $obj    
      mqseries_close($conn, $obj, MQSERIES_MQCO_NONE, $comp_code, $reason);
  
  // disconnect from the queue manager.    
      mqseries_disc($conn, $comp_code, $reason);
?>





|mqseries_conn| |mqseries_connx| |mqseries_open| |mqseries_get|

vim:ft=help:
