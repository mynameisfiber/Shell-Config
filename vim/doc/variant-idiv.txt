*variant_idiv* -- Converts variants to integers and then returns the result from
dividing them

  mixed variant_idiv(mixed left, mixed right)~

Converts {left} and {right} to integer values, and then performs integer
division.

{left} The left operand.

{right} The right operand.

As with all the variant arithmetic functions, the parameters for this function
can be either a PHP native type (integer, string, floating point, boolean or
NULL), or an instance of a COM, VARIANT or DOTNET class. PHP native types will
be converted to variants using the same rules as found in the constructor for
the class. COM and DOTNET objects will have the value of their default
property taken and used as the variant value.

The variant arithmetic functions are wrappers around the similarly named
functions in the COM library; for more information on these functions, consult
the MSDN library. The PHP functions are named slightly differently; for
example |variant_add| in PHP corresponds to VarAdd() in the MSDN
documentation.

Variant Integer Division Rules If Then Both expressions are of the string,
date, character, boolean type Division and integer is returned One expression
is a string type and the other a character Division One expression is numeric
and the other is a string Division Both expressions are numeric Division
Either expression is NULL NULL is returned Both expressions are empty A
com_exception with code DISP_E_DIVBYZERO is thrown

|variant_div|

vim:ft=help:
