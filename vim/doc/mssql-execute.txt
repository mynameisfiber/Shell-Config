*mssql_execute* -- Executes a stored procedure on a MS SQL server database

  mixed mssql_execute(resource stmt [, bool skip_results])~

Executes a stored procedure on a MS SQL server database

{stmt} Statement handle obtained with |mssql_init|.

{skip_results} Whenever to skip the results or not.

|mssql_execute| example

<?php >
  // Create a new statement
  $stmt = mssql_init('NewBlogEntry');
  
  // Some data strings
  $title = 'Test of blogging system';
  $content = 'If you can read this, then the new system is compatible with MSSQL';
  
  // Bind values
  mssql_bind($stmt, '@author',    'Felipe Pena',  SQLVARCHAR,     false,  false,   60);
  mssql_bind($stmt, '@date',      '08/10/2008',   SQLVARCHAR,     false,  false,   20);
  mssql_bind($stmt, '@title',     $title,         SQLVARCHAR,     false,  false,   60);
  mssql_bind($stmt, '@content',   $content,       SQLTEXT);
  
  // Execute the statement
  mssql_execute($stmt);
  
  // And we can free it like so:
  mssql_free_statement($stmt);
?>





If the stored procedure returns parameters or a return value these will be
available after the call to |mssql_execute| unless the stored procedure
returns more than one result set. In that case use |mssql_next_result| to
shift through the results. When the last result has been processed the output
parameters and return values will be available.

|mssql_bind| |mssql_free_statement| |mssql_init|

vim:ft=help:
