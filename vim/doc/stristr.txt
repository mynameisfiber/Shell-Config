*stristr* -- Case-insensitive strstr

  string stristr(string haystack, mixed needle [, bool before_needle])~

Returns all of {haystack} from the first occurrence of {needle} to the end.

{haystack} The string to search in

{needle} If {needle} is not a string, it is converted to an integer and
applied as the ordinal value of a character.

{before_needle} If TRUE, |stristr| returns the part of the {haystack} before
the first occurrence of the {needle}.

{needle} and {haystack} are examined in a case-insensitive manner.

Returns the matched substring. If {needle} is not found, returns FALSE.

Version Description 5.3.0 Added the optional parameter {before_needle}. 4.3.0
|stristr| was made binary safe.

|stristr| example

<?php >
    $email = 'USER@EXAMPLE.com';
    echo stristr($email, 'e'); // outputs ER@EXAMPLE.com
    echo stristr($email, 'e', true); // As of PHP 5.3.0, outputs US
?>





Testing if a string is found or not

<?php >
    $string = 'Hello World!';
    if(stristr($string, 'earth') === FALSE) {
      echo '"earth" not found in string';
    }
  // outputs: "earth" not found in string
?>





Using a non "string" needle

<?php >
    $string = 'APPLE';
    echo stristr($string, 97); // 97 = lowercase a
  // outputs: APPLE
?>





This function is binary-safe.

|strstr| |strrchr| |substr| |preg_match|

vim:ft=help:
