*classkit_method_redefine* -- Dynamically changes the code of the given method

  bool classkit_method_redefine(string classname, string methodname, string args, string code [, int flags])~

This function cannot be used to manipulate the currently running (or chained)
method.

This function is EXPERIMENTAL. The behaviour of this function, its name, and
surrounding documentation may change without notice in a future release of
PHP. This function should be used at your own risk.

{classname} The class in which to redefine the method

{methodname} The name of the method to redefine

{args} Comma-delimited list of arguments for the redefined method

{code} The new code to be evaluated when {methodname} is called

{flags} The redefined method can be CLASSKIT_ACC_PUBLIC,
CLASSKIT_ACC_PROTECTED or CLASSKIT_ACC_PRIVATE

This parameter is only used as of PHP 5, because, prior to this, all methods
were public.

Returns TRUE on success or &false; on failure.

|classkit_method_redefine| example

<?php >
  class Example {
      function foo() {
          return "foo!\n";
      }
  }
  
  // create an Example object
  $e = new Example();
  
  // output Example::foo() (before redefine)
  echo "Before: " . $e->foo();
  
  // Redefine the 'foo' method
  classkit_method_redefine(
      'Example',
      'foo',
      '',
      'return "bar!\n";',
      CLASSKIT_ACC_PUBLIC
  );
  
  // output Example::foo() (after redefine)
  echo "After: " . $e->foo();
?>

The above example will output:

  Before: foo!
  After: bar!



|classkit_method_add| |classkit_method_copy| |classkit_method_remove|
|classkit_method_rename|

vim:ft=help:
