*SQLiteUnbuffered->fetchSingle* -- Fetches the first column of a result set as a
string

  string sqlite_fetch_single(resource result [, bool decode_binary])~

Object oriented style (method):

  string fetchSingle(resource result [, bool decode_binary [, bool decode_binary]])~

  string fetchSingle(resource result [, bool decode_binary [, bool decode_binary [, bool decode_binary]]])~

|sqlite_fetch_single| is identical to |sqlite_fetch_array| except that it
returns the value of the first column of the rowset.

This is the most optimal way to retrieve data when you are only interested in
the values from a single column of data.

{result} The SQLite result resource. This parameter is not required when using
the object-oriented method.

{decode_binary} When the {decode_binary} parameter is set to TRUE (the
default), PHP will decode the binary encoding it applied to the data if it was
encoded using the |sqlite_escape_string|. You should normally leave this value
at its default, unless you are interoperating with databases created by other
sqlite capable applications.

Returns the first column value, as a string.

A |sqlite_fetch_single| example

<?php >
  if ($dbhandle = sqlite_open('mysqlitedb', 0666, $sqliteerror)) {
  
      $sql = "SELECT id FROM sometable WHERE id = 42";
      $res = sqlite_query($dbhandle, $sql);
  
      if (sqlite_num_rows($res) > 0) {
          echo sqlite_fetch_single($res); // 42
      }
      
      sqlite_close($dbhandle);
  }
?>





|sqlite_fetch_array|

vim:ft=help:
