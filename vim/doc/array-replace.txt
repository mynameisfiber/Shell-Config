*array_replace* -- Replaces elements from passed arrays into the first array

  array array_replace(array array, array array1 [, array array2 [, array ...]])~

|array_replace| replaces the values of the first {array} with the same values
from all the following arrays. If a key from the first array exists in the
second array, its value will be replaced by the value from the second array.
If the key exists in the second array, and not the first, it will be created
in the first array. If a key only exists in the first array, it will be left
as is. If several arrays are passed for replacement, they will be processed in
order, the later arrays overwriting the previous values.

|array_replace| is not recursive : it will replace values in the first array
by whatever type is in the second array.

{array} The array in which elements are replaced.

{array1} The array from which elements will be extracted.

Returns an array, or NULL if an error occurs.

|array_replace| example

<?php >
  $base = array("orange", "banana", "apple", "raspberry");
  $replacements = array(0 => "pineapple", 4 => "cherry");
  $replacements2 = array(0 => "grape");
  
  $basket = array_replace($base, $replacements, $replacements2);
  print_r($basket);
?>

The above example will output:

  Array
  (
      [0] => grape
      [1] => banana
      [2] => apple
      [3] => raspberry
      [4] => cherry
  )



|array_replace_recursive|

vim:ft=help:
