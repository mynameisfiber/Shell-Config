*stripos* -- Find position of first occurrence of a case-insensitive string

  int stripos(string haystack, string needle [, int offset])~

Returns the numeric position of the first occurrence of {needle} in the
{haystack} string.

Unlike |strpos|, |stripos| is case-insensitive.

{haystack} The string to search in

{needle} Note that the {needle} may be a string of one or more characters.

If {needle} is not a string, it is converted to an integer and applied as the
ordinal value of a character.

{offset} The optional {offset} parameter allows you to specify which character
in {haystack} to start searching. The position returned is still relative to
the beginning of {haystack}.

If {needle} is not found, |stripos| will return boolean FALSE.

This function may return Boolean FALSE, but may also return a non-Boolean
value which evaluates to FALSE, such as 0 or "". Please read the section on
Booleans for more information. Use the === operator for testing the return
value of this function.

|stripos| examples

<?php >
  $findme    = 'a';
  $mystring1 = 'xyz';
  $mystring2 = 'ABC';
  
  $pos1 = stripos($mystring1, $findme);
  $pos2 = stripos($mystring2, $findme);
  
  // Nope, 'a' is certainly not in 'xyz'
  if ($pos1 === false) {
      echo "The string '$findme' was not found in the string '$mystring1'";
  }
  
  // Note our use of ===.  Simply == would not work as expected
  // because the position of 'a' is the 0th (first) character.
  if ($pos2 !== false) {
      echo "We found '$findme' in '$mystring2' at position $pos2";
  }
?>





This function is binary-safe.

|strpos| |strrpos| |strrchr| |substr| |stristr| |strstr| |strripos|
|str_ireplace|

vim:ft=help:
