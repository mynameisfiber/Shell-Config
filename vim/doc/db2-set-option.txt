*db2_set_option* -- Set options for connection or statement resources

  bool db2_set_option(resource resource, array options, int type)~

Sets options for a statement resource or a connection resource. You cannot set
options for result set resources.

{resource} A valid statement resource as returned from |db2_prepare| or a
valid connection resource as returned from |db2_connect| or |db2_pconnect|.

{options} An associative array containing valid statement or connection
options. This parameter can be used to change autocommit values, cursor types
(scrollable or forward), and to specify the case of the column names (lower,
upper, or natural) that will appear in a result set. {autocommit} Passing
DB2_AUTOCOMMIT_ON turns autocommit on for the specified connection resource.

Passing DB2_AUTOCOMMIT_OFF turns autocommit off for the specified connection
resource.

{cursor} Passing DB2_FORWARD_ONLY specifies a forward-only cursor for a
statement resource. This is the default cursor type, and is supported by all
database servers.

Passing DB2_SCROLLABLE specifies a scrollable cursor for a statement resource.
Scrollable cursors enable result set rows to be accessed in non-sequential
order, but are only supported by IBM DB2 Universal Database databases.

{binmode} Passing DB2_BINARY specifies that binary data will be returned as
is. This is the default mode. This is the equivalent of setting
ibm_db2.binmode=1 in php.ini.

Passing DB2_CONVERT specifies that binary data will be converted to
hexadecimal encoding, and will be returned as such. This is the equivalent of
setting ibm_db2.binmode=2 in php.ini.

Passing DB2_PASSTHRU specifies that binary data will be converted to NULL.
This is the equivalent of setting ibm_db2.binmode=3 in php.ini.

{db2_attr_case} Passing DB2_CASE_LOWER specifies that column names of the
result set are returned in lower case.

Passing DB2_CASE_UPPER specifies that column names of the result set are
returned in upper case.

Passing DB2_CASE_NATURAL specifies that column names of the result set are
returned in natural case.

{deferred_prepare} Passing DB2_DEFERRED_PREPARE_ON turns deferred prepare on
for the specified statement resource.

Passing DB2_DEFERRED_PREPARE_OFF turns deferred prepare off for the specified
statement resource.

The following new i5/OS options are available in ibm_db2 version 1.5.1 and
later. These options apply only when running PHP and ibm_db2 natively on i5
systems. {i5_fetch_only} DB2_I5_FETCH_ON - Cursors are read-only and cannot be
used for positioned updates or deletes. This is the default unless
SQL_ATTR_FOR_FETCH_ONLY environment has been set to SQL_FALSE.

DB2_I5_FETCH_OFF - Cursors can be used for positioned updates and deletes.

The following new option is available in ibm_db2 version 1.8.0 and later.
{rowcount} DB2_ROWCOUNT_PREFETCH_ON - Client can request the full row count
prior to fetching, which means that |db2_num_rows| returns the number of rows
selected even when a ROLLFORWARD_ONLY cursor is used.

DB2_ROWCOUNT_PREFETCH_OFF - Client cannot request the full row count prior to
fetching.

The following new options are available in ibm_db2 version 1.7.0 and later.
{trusted_user} To switch the user to a trusted user, pass the User ID (String)
of the trusted user as the value of this key. This option can be set on a
connection resource only. To use this option, trusted context must be enabled
on the connection resource.

{trusted_password} The password (String) that corresponds to the user
specified by the trusted_user key.

The following new options are available in ibm_db2 version 1.6.0 and later.
These options provide useful tracking information that can be accessed during
execution with |db2_get_option|. When the value in each option is being set,
some servers might not handle the entire length provided and might truncate
the value.

To ensure that the data specified in each option is converted correctly when
transmitted to a host system, use only the characters A through Z, 0 through
9, and the underscore (_) or period (.).

{userid} SQL_ATTR_INFO_USERID - A pointer to a null-terminated character
string used to identify the client user ID sent to the host database server
when using DB2 Connect. DB2 for z/OS and OS/390 servers support up to a length
of 16 characters. This user-id is not to be confused with the authentication
user-id, it is for identification purposes only and is not used for any
authorization.

{acctstr} SQL_ATTR_INFO_ACCTSTR - A pointer to a null-terminated character
string used to identify the client accounting string sent to the host database
server when using DB2 Connect. DB2 for z/OS and OS/390 servers support up to a
length of 200 characters.

{applname} SQL_ATTR_INFO_APPLNAME - A pointer to a null-terminated character
string used to identify the client application name sent to the host database
server when using DB2 Connect. DB2 for z/OS and OS/390 servers support up to a
length of 32 characters.

{wrkstnname} SQL_ATTR_INFO_WRKSTNNAME - A pointer to a null-terminated
character string used to identify the client workstation name sent to the host
database server when using DB2 Connect. DB2 for z/OS and OS/390 servers
support up to a length of 18 characters.

{type} An integer value that specifies the type of resource that was passed
into the function. The type of resource and this value must correspond.

Passing 1 as the value specifies that a connection resource has been passed
into the function.

Passing any integer not equal to 1 as the value specifies that a statement
resource has been passed into the function.



vim:ft=help:
