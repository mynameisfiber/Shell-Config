*apc_define_constants* -- Defines a set of constants for retrieval and
mass-definition

  bool apc_define_constants(string key, array constants [, bool case_sensitive])~

|define| is notoriously slow. Since the main benefit of APC is to increase the
performance of scripts/applications, this mechanism is provided to streamline
the process of mass constant definition. However, this function does not
perform as well as anticipated.

For a better-performing solution, try the hidef extension from PECL.

To remove a set of stored constants (without clearing the entire cache), an
empty array may be passed as the {constants} parameter, effectively clearing
the stored value(s).

{key} The {key} serves as the name of the constant set being stored. This
{key} is used to retrieve the stored constants in |apc_load_constants|.

{constants} An associative array of constant_name => value pairs. The
constant_name must follow the normal constant naming rules. value must
evaluate to a scalar value.

{case_sensitive} The default behaviour for constants is to be declared
case-sensitive; i.e. CONSTANT and Constant represent different values. If this
parameter evaluates to FALSE the constants will be declared as
case-insensitive symbols.

Returns TRUE on success or &false; on failure.

|apc_define_constants| example

<?php >
  $constants = array(
      'ONE'   => 1,
      'TWO'   => 2,
      'THREE' => 3,
  );
  apc_define_constants('numbers', $constants);
  echo ONE, TWO, THREE;
?>

The above example will output:

  123



|apc_load_constants| |define| |constant| Or the PHP constants reference

vim:ft=help:
