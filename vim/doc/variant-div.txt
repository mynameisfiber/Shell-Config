*variant_div* -- Returns the result from dividing two variants

  mixed variant_div(mixed left, mixed right)~

Divides {left} by {right} and returns the result.

{left} The left operand.

{right} The right operand.

As with all the variant arithmetic functions, the parameters for this function
can be either a PHP native type (integer, string, floating point, boolean or
NULL), or an instance of a COM, VARIANT or DOTNET class. PHP native types will
be converted to variants using the same rules as found in the constructor for
the class. COM and DOTNET objects will have the value of their default
property taken and used as the variant value.

The variant arithmetic functions are wrappers around the similarly named
functions in the COM library; for more information on these functions, consult
the MSDN library. The PHP functions are named slightly differently; for
example |variant_add| in PHP corresponds to VarAdd() in the MSDN
documentation.

Variant Division Rules If Then Both expressions are of the string, date,
character, boolean type Double is returned One expression is a string type and
the other a character Division and a double is returned One expression is
numeric and the other is a string Division and a double is returned. Both
expressions are numeric Division and a double is returned Either expression is
NULL NULL is returned {right} is empty and {left} is anything but empty A
com_exception with code DISP_E_DIVBYZERO is thrown {left} is empty and {right}
is anything but empty. 0 as type double is returned Both expressions are empty
A com_exception with code DISP_E_OVERFLOW is thrown

|variant_idiv|

vim:ft=help:
