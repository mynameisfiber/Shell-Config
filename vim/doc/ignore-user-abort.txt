*ignore_user_abort* -- Set whether a client disconnect should abort script
execution

  int ignore_user_abort([string value])~

Sets whether a client disconnect should cause a script to be aborted.

When running PHP as a command line script, and the script's tty goes away
without the script being terminated then the script will die the next time it
tries to write anything, unless {value} is set to TRUE

{value} If set, this function will set the ignore_user_abort ini setting to
the given {value}. If not, this function will only return the previous setting
without changing it.

Returns the previous setting, as an integer.

A |ignore_user_abort| example

<?php >
  // Ignore user aborts and allow the script
  // to run forever
  ignore_user_abort(true);
  set_time_limit(0);
  
  echo 'Testing connection handling in PHP';
  
  // Run a pointless loop that sometime 
  // hopefully will make us click away from 
  // page or click the "Stop" button.
  while(1)
  {
      // Did the connection fail?
      if(connection_status() != CONNECTION_NORMAL)
      {
          break;
      }
  
      // Sleep for 10 seconds
      sleep(10);
  }
  
  // If this is reached, then the 'break' 
  // was triggered from inside the while loop
  
  // So here we can log, or perform any other tasks
  // we need without actually being dependent on the 
  // browser.
?>





PHP will not detect that the user has aborted the connection until an attempt
is made to send information to the client. Simply using an echo statement does
not guarantee that information is sent, see |flush|.

|connection_aborted| |connection_status| Connection Handling for a complete
description of connection handling in PHP.

vim:ft=help:
