*maxdb->thread_id* -- Returns the thread ID for the current connection

Procedural style

  int maxdb_thread_id(resource link)~

Object oriented style

The |maxdb_thread_id| function returns the thread ID for the current
connection which can then be killed using the |maxdb_kill| function. If the
connection is lost and you reconnect with |maxdb_ping|, the thread ID will be
other. Therefore you should get the thread ID only when you need it.

The thread ID is assigned on a connection-by-connection basis. Hence, if the
connection is broken and then re-established a new thread ID will be assigned.

|maxdb_thread_id| returns the Thread ID for the current connection.

Object oriented style

<?php >
  $maxdb = new maxdb("localhost", "MONA", "RED", "DEMODB");
  
  /* check connection */
  if (maxdb_connect_errno()) {
     printf("Connect failed: %s\n", maxdb_connect_error());
     exit();
  }
  
  /* determine our thread id */
  $thread_id = $maxdb->thread_id;
  
  /* Kill connection */
  $maxdb->kill($thread_id);
  
  /* This should produce an error */
  if (!$maxdb->query("CREATE TABLE mycity LIKE hotel.city")) {
     printf("Error: %s\n", $maxdb->error);
     exit;
  }
  
  /* close connection */
  $maxdb->close();
?>



Procedural style

<?php >
  $link = maxdb_connect("localhost", "MONA", "RED", "DEMODB");
  
  /* check connection */
  if (maxdb_connect_errno()) {
     printf("Connect failed: %s\n", maxdb_connect_error());
     exit();
  }
  
  /* determine our thread id */
  $thread_id = maxdb_thread_id($link);
  
  /* Kill connection */
  maxdb_kill($link, $thread_id);
  
  /* This should produce an error */
  if (!maxdb_query($link, "CREATE TABLE mycity LIKE hotel.city")) {
     printf("Error: %s\n", maxdb_error($link));
     exit;
  }
  
  /* close connection */
  maxdb_close($link);
?>



The above example will output something similar to:



  Warning: maxdb_query(): -10821 Session not connected <...>
  Error: Session not connected

|maxdb_kill|

vim:ft=help:
