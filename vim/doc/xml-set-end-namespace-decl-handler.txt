*xml_set_end_namespace_decl_handler* -- Set up end namespace declaration handler

  bool xml_set_end_namespace_decl_handler(resource parser, callback handler)~

Set a handler to be called when leaving the scope of a namespace declaration.
This will be called, for each namespace declaration, after the handler for the
end tag of the element in which the namespace was declared.

{parser} A reference to the XML parser.

{handler} {handler} is a string containing the name of a function that must
exist when |xml_parse| is called for {parser}.

  bool (resource parser, callback handler, resource parser, string prefix)~

The function named by {handler} must accept two parameters, and should return
an integer value. If the value returned from the handler is FALSE (which it
will be if no value is returned), the XML parser will stop parsing and
|xml_get_error_code| will return XML_ERROR_EXTERNAL_ENTITY_HANDLING. {parser}
The first parameter, parser, is a reference to the XML parser calling the
handler.

{prefix} The prefix is a string used to reference the namespace within an XML
object.

If a handler function is set to an empty string, or FALSE, the handler in
question is disabled.

Instead of a function name, an array containing an object reference and a
method name can also be supplied.

Returns TRUE on success or &false; on failure.

This event is not supported under LibXML.

|xml_set_start_namespace_decl_handler|

vim:ft=help:
