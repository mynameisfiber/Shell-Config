*strrpos* -- Find the position of the last occurrence of a substring in a string

  int strrpos(string haystack, string needle [, int offset])~

Returns the numeric position of the last occurrence of {needle} in the
{haystack} string.

{haystack} The string to search in.

{needle} If {needle} is not a string, it is converted to an integer and
applied as the ordinal value of a character. The {needle} can only be a single
character in PHP 4.

{offset} May be specified to begin searching an arbitrary number of characters
into the string. Negative values will stop searching at an arbitrary point
prior to the end of the string.

Returns the position where the needle exists. Returns FALSE if the needle was
not found.

Version Description 5.0.0 The {needle} may now be a string of more than one
character. 5.0.0 The {offset} parameter was introduced.

Checking if a needle is in the haystack It is easy to mistake the return
values for "character found at position 0" and "character not found". Here's
how to detect the difference:

<?php >
  $pos = strrpos($mystring, "b");
  if ($pos === false) { // note: three equal signs
      // not found...
  }
?>



Searching with offsets

<?php >
  $foo = "0123456789a123456789b123456789c";
  
  var_dump(strrpos($foo, '7', -5));  // Starts looking backwards five positions
                                     // from the end. Result: int(17)
  
  var_dump(strrpos($foo, '7', 20));  // Starts searching 20 positions into the
                                     // string. Result: int(27)
  
  var_dump(strrpos($foo, '7', 28));  // Result: bool(false)
?>





|strpos| |strripos| |strrchr| |substr| |stristr| |strstr|

vim:ft=help:
