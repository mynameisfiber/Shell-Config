*snmp3_set* -- Description

  bool snmp3_set(string host, string sec_name, string sec_level, string auth_protocol, string auth_passphrase, string priv_protocol, string priv_passphrase, string object_id, string type, string value [, string timeout [, string retries]])~

|snmp3_set| is used to set the value of an SNMP object specified by the
{object_id}.

Even if the security level does not use an auth or priv protocol/password
valid values have to be specified.

The hostname of the SNMP agent (server).

the security name, usually some kind of username

the security level (noAuthNoPriv|authNoPriv|authPriv)

the authentication protocol (MD5 or SHA)

the authentication pass phrase

the privacy protocol (DES or AES)

the privacy pass phrase

The SNMP object id.

The MIB defines the type of each object id. It has to be specified as a single
character from the below list.

If OPAQUE_SPECIAL_TYPES was defined while compiling the SNMP library, the
following are also valid:

Most of these will use the obvious corresponding ASN.1 type. 's', 'x', 'd' and
'b' are all different ways of specifying an OCTET STRING value, and the 'u'
unsigned type is also used for handling Gauge32 values.

If the MIB-Files are loaded by into the MIB Tree with "snmp_read_mib" or by
specifying it in the libsnmp config, '=' may be used as the {type} parameter
for all object ids as the type can then be automatically read from the MIB.

Note that there are two ways to set a variable of the type BITS like e.g.
"SYNTAX BITS {telnet(0), ftp(1), http(2), icmp(3), snmp(4), ssh(5), https(6)}"

Using type "b" and a list of bit numbers like:

  snmpset('FOO-MIB::bar.42', 'b', '0 1 2 3 4');

with the disadvantage that the success is not easily verifyable as an
snmpget() for the same OID would return e.g. 0xF8.

Using type "x" and a hex number but without(!) the usual "0x" prefix:

  snmpset('FOO-MIB::bar.42', 'x', 'F0');



The new value

The number of microseconds until the first timeout.

The number of retries in case of timeouts.

Returns TRUE on success or &false; on failure.

If the SNMP host rejects the data type, an E_WARNING message like "Warning:
Error in packet. Reason: (badValue) The value given has the wrong type or
length." is shown. If an unknown or invalid OID is specified the warning
probably reads "Could not add variable".

Using |snmp3_set|

<?php >
    snmp3_set('localhost', 'james', 'authPriv', 'SHA', 'secret007', 'AES', 'secret007', 'IF-MIB::ifAlias.3', 's', "foo");
?>





vim:ft=help:
