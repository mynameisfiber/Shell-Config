*pg_send_query_params* -- Submits a command and separate parameters to the
server without waiting for the result(s).

  bool pg_send_query_params(resource connection, string query, array params)~

Submits a command and separate parameters to the server without waiting for
the result(s).

This is equivalent to |pg_send_query| except that query parameters can be
specified separately from the {query} string. The function's parameters are
handled identically to |pg_query_params|. Like |pg_query_params|, it will not
work on pre-7.4 PostgreSQL connections, and it allows only one command in the
query string.

{connection} PostgreSQL database connection resource.

{query} The parameterized SQL statement. Must contain only a single statement.
(multiple statements separated by semi-colons are not allowed.) If any
parameters are used, they are referred to as $1, $2, etc.

{params} An array of parameter values to substitute for the $1, $2, etc.
placeholders in the original prepared query string. The number of elements in
the array must match the number of placeholders.

Returns TRUE on success or &false; on failure.

Use |pg_get_result| to determine the query result.

Using |pg_send_query_params|

<?php >
    $dbconn = pg_connect("dbname=publisher") or die("Could not connect");
  
    // Using parameters.  Note that it is not necessary to quote or escape
    // the parameter.
    pg_send_query_params($dbconn, 'select count(*) from authors where city = $1', array('Perth'));
    
    // Compare against basic pg_send_query usage
    $str = pg_escape_string('Perth');
    pg_send_query($dbconn, "select count(*) from authors where city = '${str}'");
?>





|pg_send_query|

vim:ft=help:
