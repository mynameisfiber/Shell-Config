*cubrid_seq_insert* -- Insert an element to a sequence type column using OID

  bool cubrid_seq_insert(resource conn_identifier, string oid, string attr_name, int index, string seq_element)~

The |cubrid_col_insert| function is used to insert an element to a sequence
type attribute in a requested location.

{conn_identifier} Connection identifier.

{oid} OID of the instance you want to work with.

{attr_name} Name of the attribute you want to insert an instance to.

{index} Location of the element, you want to insert the element to (1-based).

{seq_element} Content of the element that you want to insert.

TRUE, when process is successful.

FALSE, when process is unsuccessful.

|cubrid_seq_insert| example

<?php >
  $conn = cubrid_connect("localhost", 33000, "demodb");
  
  @cubrid_execute($conn, "DROP TABLE foo");
  cubrid_execute($conn, "CREATE TABLE foo(a int AUTO_INCREMENT, b set(int), c sequence(int), d char(10))");
  cubrid_execute($conn, "INSERT INTO foo(a, b, c, d) VALUES(1, {1,2,3}, {11,22,33,333}, 'a')");
  
  $req = cubrid_execute($conn, "SELECT * FROM foo", CUBRID_INCLUDE_OID);
  
  cubrid_move_cursor($req, 1, CUBRID_CURSOR_FIRST);
  $oid = cubrid_current_oid($req);
  
  $attr = cubrid_col_get($conn, $oid, "c");
  var_dump($attr);
  
  cubrid_seq_insert($conn, $oid, "c", 5, "44");
  
  $attr = cubrid_col_get($conn, $oid, "c");
  var_dump($attr);
  
  cubrid_close_request($req);
  cubrid_disconnect($conn);
?>

The above example will output:

  array(4) {
    [0]=>
    string(2) "11"
    [1]=>
    string(2) "22"
    [2]=>
    string(2) "33"
    [3]=>
    string(3) "333"
  }
  array(5) {
    [0]=>
    string(2) "11"
    [1]=>
    string(2) "22"
    [2]=>
    string(2) "33"
    [3]=>
    string(3) "333"
    [4]=>
    string(2) "44"
  }

|cubrid_seq_drop| |cubrid_seq_put|

vim:ft=help:
