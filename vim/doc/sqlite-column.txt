*SQLiteUnbuffered->column* -- Fetches a column from the current row of a result
set

  mixed sqlite_column(resource result, mixed index_or_name [, bool decode_binary])~

  mixed column(resource result, mixed index_or_name [, bool decode_binary, mixed index_or_name [, bool decode_binary]])~

  mixed column(resource result, mixed index_or_name [, bool decode_binary, mixed index_or_name [, bool decode_binary, mixed index_or_name [, bool decode_binary]]])~

Fetches the value of a column named {index_or_name} (if it is a string), or of
the ordinal column numbered {index_or_name} (if it is an integer) from the
current row of the query result handle {result}.

{result} The SQLite result resource. This parameter is not required when using
the object-oriented method.

{index_or_name} The column index or name to fetch.

{decode_binary} When the {decode_binary} parameter is set to TRUE (the
default), PHP will decode the binary encoding it applied to the data if it was
encoded using the |sqlite_escape_string|. You should normally leave this value
at its default, unless you are interoperating with databases created by other
sqlite capable applications.

Returns the column value.

Use this function when you are iterating a large result set with many columns,
or with columns that contain large amounts of data.

|sqlite_fetch_string|

vim:ft=help:
