*expect_expectl* -- Waits until the output from a process matches one of the
patterns, a specified time period has passed, or an EOF is seen

  int expect_expectl(resource expect, array cases [, array match])~

Waits until the output from a process matches one of the patterns, a specified
time period has passed, or an EOF is seen.

If {match} is provided, then it is filled with the result of search. The
matched string can be found in {match[0]}. The match substrings (according to
the parentheses) in the original pattern can be found in {match[1]},
{match[2]}, and so on, up to {match[9]} (the limitation of libexpect).

{expect} An Expect stream, previously opened with |expect_popen|.

{cases} An array of expect cases. Each expect case is an indexed array, as
described in the following table: Expect Case Array Index Key Value Type
Description Is Mandatory Default Value 0 string pattern, that will be matched
against the output from the stream yes 1 mixed value, that will be returned by
this function, if the pattern matches yes 2 integer pattern type, one of:
EXP_GLOB, EXP_EXACT or EXP_REGEXP no EXP_GLOB

Returns value associated with the pattern that was matched.

On failure this function returns: EXP_EOF, EXP_TIMEOUT or EXP_FULLBUFFER

Version Description 0.2.1 Prior to version 0.2.1, in {match} parameter a match
string was returned, not an array of match substrings.

|expect_expectl| example

<?php >
  // Copies file from remote host:
  ini_set ("expect.timeout", 30);
  
  $stream = fopen ("expect://scp user@remotehost:/var/log/messages /home/user/messages.txt", "r");
  
  $cases = array (
    array (0 => "password:", 1 => PASSWORD),
    array (0 => "yes/no)?", 1 => YESNO)
  );
  
  while (true) {
   switch (expect_expectl ($stream, $cases))
   {
    case PASSWORD:
     fwrite ($stream, "password\n");
     break;
  
    case YESNO:
     fwrite ($stream, "yes\n");
     break;
  
    case EXP_TIMEOUT:
    case EXP_EOF:
     break 2;
    
    default:
     die ("Error has occurred!\n");
   }
  }
  
  fclose ($stream);
?>





|expect_popen|

vim:ft=help:
