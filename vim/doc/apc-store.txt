*apc_store* -- Cache a variable in the data store

  bool apc_store(string key, mixed var [, int ttl])~

  array apc_store(string key, mixed var [, int ttl, array values [, mixed unused [, int ttl]]])~

Cache a variable in the data store.

Unlike many other mechanisms in PHP, variables stored using |apc_store| will
persist between requests (until the value is removed from the cache).

{key} Store the variable using this name. {key}s are cache-unique, so storing
a second value with the same {key} will overwrite the original value.

{var} The variable to store

{ttl} Time To Live; store {var} in the cache for {ttl} seconds. After the
{ttl} has passed, the stored variable will be expunged from the cache (on the
next request). If no {ttl} is supplied (or if the {ttl} is 0), the value will
persist until it is removed from the cache manually, or otherwise fails to
exist in the cache (clear, restart, etc.).

{values} Names in key, variables in value.

Returns TRUE on success or &false; on failure. Second syntax returns array
with error keys.

A |apc_store| example

<?php >
  $bar = 'BAR';
  apc_store('foo', $bar);
  var_dump(apc_fetch('foo'));
?>

The above example will output:

  string(3) "BAR"



|apc_add| |apc_fetch| |apc_delete|

vim:ft=help:
