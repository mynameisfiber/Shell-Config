*rtrim* -- Strip whitespace (or other characters) from the end of a string

  string rtrim(string str [, string charlist])~

This function returns a string with whitespace stripped from the end of {str}.

Without the second parameter, |rtrim| will strip these characters: " " (ASCII
32 (0x20)), an ordinary space.

"\t" (ASCII 9 (0x09)), a tab.

"\n" (ASCII 10 (0x0A)), a new line (line feed).

"\r" (ASCII 13 (0x0D)), a carriage return.

"\0" (ASCII 0 (0x00)), the NUL-byte.

"\x0B" (ASCII 11 (0x0B)), a vertical tab.

{str} The input string.

{charlist} You can also specify the characters you want to strip, by means of
the {charlist} parameter. Simply list all characters that you want to be
stripped. With .. you can specify a range of characters.

Returns the modified string.

Version Description 4.1.0 The {charlist} parameter was added.

Usage example of |rtrim|

<?php >
  $text = "\t\tThese are a few words :) ...  ";
  $binary = "\x09Example string\x0A";
  $hello  = "Hello World";
  var_dump($text, $binary, $hello);
  
  print "\n";
  
  $trimmed = rtrim($text);
  var_dump($trimmed);
  
  $trimmed = rtrim($text, " \t.");
  var_dump($trimmed);
  
  $trimmed = rtrim($hello, "Hdle");
  var_dump($trimmed);
  
  // trim the ASCII control characters at the end of $binary
  // (from 0 to 31 inclusive)
  $clean = rtrim($binary, "\x00..\x1F");
  var_dump($clean);
?>

The above example will output:

  string(32) "        These are a few words :) ...  "
  string(16) "    Example string
  "
  string(11) "Hello World"
  
  string(30) "        These are a few words :) ..."
  string(26) "        These are a few words :)"
  string(9) "Hello Wor"
  string(15) "    Example string"



|trim| |ltrim|

vim:ft=help:
