*idn_to_ascii* -- Convert UTF-8 encoded domain name to ASCII

  string idn_to_ascii(string utf8_domain [, int errorcode])~

This function converts a UTF-8 encoded domain name to ASCII according to the
IDNA toUnicode() specification. If the input has non-ASCII characters, the
output will be in the "xn--" ACE notation.

{utf8_domain} The UTF-8 encoded domain name. If e.g. an ISO-8859-1 (aka
Western Europe latin1) encoded string is passed it will be converted into an
ACE encoded "xn--" string. It will not be the one you expected though!

{errorcode} Will be set to the IDNA error code.

The ACE encoded version of the domain name or FALSE on failure.

If an error occurs FALSE is returned and the optional errorcode is set. In
addition a E_WARNING message is printed.

|idn_to_ascii| example First a simple example and then one explaining how to
catch errors.

<?php >
  // ISO-8859-1 encoded string
  echo idn_to_ascii(utf8_encode('tÃ¤st.de'));
  
  // Cannot convert a domain name to ASCII that contains non-ASCII chars but already starts with "xn--"
  $ascii = idn_to_ascii("xn--".chr(0xC3).chr(0xA4), $errorcode);
  if ($ascii === false) {
      printf("Detected error %d: %s\n", $errorcode, idn_strerror($errorcode));
  }
?>

The above example will output something similar to:

  xn--tst-qla.de
  
  Detected error 8: Input already contain ACE prefix (`xn--')



|utf8_encode| |idn_strerror| |idn_to_utf8|

vim:ft=help:
