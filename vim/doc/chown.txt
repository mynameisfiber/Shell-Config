*chown* -- Changes file owner

  bool chown(string filename, mixed user)~

Attempts to change the owner of the file {filename} to user {user}. Only the
superuser may change the owner of a file.

{filename} Path to the file.

{user} A user name or number.

Returns TRUE on success or &false; on failure.

Simple |chown| usage

<?php >
  // File name and username to use
  $file_name= "foo.php";
  $path = "/home/sites/php.net/public_html/sandbox/" . $file_name ;
  $user_name = "root";
  
  // Set the user
  chown($path, $user_name);
  
  // Check the result
  $stat = stat($path);
  print_r(posix_getpwuid($stat['uid']));
?>

The above example will output something similar to:

  Array
  (
      [name] => root
      [passwd] => x
      [uid] => 0
      [gid] => 0
      [gecos] => root
      [dir] => /root
      [shell] => /bin/bash
  )



This function will not work on remote files as the file to be examined must be
accessible via the server"s filesystem.

When safe mode is enabled, PHP checks whether the files or directories being
operated upon have the same UID (owner) as the script that is being executed.

|chmod|

vim:ft=help:
