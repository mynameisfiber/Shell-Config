*array_uintersect_uassoc* -- Computes the intersection of arrays with additional
index check, compares data and indexes by a callback functions

  array array_uintersect_uassoc(array array1, array array2 [, array ..., callback data_compare_func, callback key_compare_func])~

Computes the intersection of arrays with additional index check, compares data
and indexes by a callback functions Note that the keys are used in the
comparison unlike in |array_uintersect|. Both the data and the indexes are
compared by using separate callback functions.

{array1} The first array.

{array2} The second array.

{data_compare_func} For comparison is used the user supplied callback
function. It must return an integer less than, equal to, or greater than zero
if the first argument is considered to be respectively less than, equal to, or
greater than the second.

{key_compare_func} Key comparison callback function.

Returns an array containing all the values of {array1} that are present in all
the arguments.

|array_uintersect_uassoc| example

<?php >
  $array1 = array("a" => "green", "b" => "brown", "c" => "blue", "red");
  $array2 = array("a" => "GREEN", "B" => "brown", "yellow", "red");
  
  print_r(array_uintersect_uassoc($array1, $array2, "strcasecmp", "strcasecmp"));
?>

The above example will output:

  Array
  (
      [a] => green
      [b] => brown
  )



|array_uintersect| |array_intersect_assoc| |array_intersect_uassoc|
|array_uintersect_assoc|

vim:ft=help:
