*ldap_get_values* -- Get all values from a result entry

  array ldap_get_values(resource link_identifier, resource result_entry_identifier, string attribute)~

Reads all the values of the attribute in the entry in the result.

This call needs a {result_entry_identifier}, so needs to be preceded by one of
the ldap search calls and one of the calls to get an individual entry.

You application will either be hard coded to look for certain attributes (such
as "surname" or "mail") or you will have to use the |ldap_get_attributes| call
to work out what attributes exist for a given entry.

{link_identifier} An LDAP link identifier, returned by |ldap_connect|.

{result_entry_identifier}

{attribute}

Returns an array of values for the attribute on success and FALSE on error.
The number of values can be found by indexing "count" in the resultant array.
Individual values are accessed by integer index in the array. The first index
is 0.

LDAP allows more than one entry for an attribute, so it can, for example,
store a number of email addresses for one person's directory entry all labeled
with the attribute "mail"

  return_value["count"] = number of values for attribute
      return_value[0] = first value of attribute
      return_value[i] = ith value of attribute

List all values of the "mail" attribute for a directory entry

<?php >
  // $ds is a valid link identifier for a directory server
  
  // $sr is a valid search result from a prior call to
  //     one of the ldap directory search calls
  
  // $entry is a valid entry identifier from a prior call to
  //        one of the calls that returns a directory entry
  
  $values = ldap_get_values($ds, $entry, "mail");
  
  echo $values["count"] . " email addresses for this entry.<br />";
  
  for ($i=0; $i < $values["count"]; $i++) {
      echo $values[$i] . "<br />";
  }
?>





|ldap_get_values_len|

vim:ft=help:
