*func_num_args* -- Returns the number of arguments passed to the function

  int func_num_args()~

Gets the number of arguments passed to the function.

This function may be used in conjunction with |func_get_arg| and
|func_get_args| to allow user-defined functions to accept variable-length
argument lists.

Returns the number of arguments passed into the current user-defined function.

Version Description 5.3.0 This function can now be used in parameter lists.
5.3.0 If this function is called from the outermost scope of a file which has
been included by calling |include| or |require| from within a function in the
calling file, it now generates a warning and returns -1.

Generates a warning if called from outside of a user-defined function.

|func_num_args| example

<?php >
  function foo()
  {
      $numargs = func_num_args();
      echo "Number of arguments: $numargs\n";
  }
  
  foo(1, 2, 3);   
?>

The above example will output:

  Number of arguments: 3



|func_num_args| example before and after PHP 5.3

  test.php
<?php >
  function foo() {
      include './fna.php';
  }
  
  foo('First arg', 'Second arg');
?>
  
  fna.php
<?php >
  $num_args = func_num_args();
  var_export($num_args);
?>

Output previous to PHP 5.3:

  2

Output in PHP 5.3 and later will be something similar to:

  Warning: func_num_args():  Called from the global scope - no function
  context in /home/torben/Desktop/code/ml/fna.php on line 3
  -1



Because this function depends on the current scope to determine parameter
details, it cannot be used as a function parameter in versions prior to 5.3.0.
If this value must be passed, the results should be assigned to a variable,
and that variable should be passed.

|func_get_arg| |func_get_args|

vim:ft=help:
