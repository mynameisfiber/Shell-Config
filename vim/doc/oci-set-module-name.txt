*oci_set_module_name* -- Sets the module name

  bool oci_set_module_name(resource connection, string module_name)~

Sets the module name for Oracle tracing.

The module name is registered with the database when the next 'roundtrip' from
PHP to the database occurs, typically when an SQL statement is executed.

The name can subsequently be queried from database administration views such
as V$SESSION. It can be used for tracing and monitoring such as with V$SQLAREA
and DBMS_MONITOR.SERV_MOD_ACT_STAT_ENABLE.

The value may be retained across persistent connections.

{connection} An Oracle connection identifier, returned by |oci_connect|,
|oci_pconnect|, or |oci_new_connect|.

{module_name} User chosen string up to 48 bytes long.

Returns TRUE on success or &false; on failure.

This function is available when PHP is linked with Oracle Database libraries
from version 10g onwards.

With older versions of OCI8 or the Oracle Database, the client information can
be set using the Oracle DBMS_APPLICATION_INFO package. This is less efficient
than using |oci_set_client_info|.

Some but not all OCI8 functions cause roundtrips. Roundtrips to the database
may not occur with queries when result caching is enabled.

Setting the module name

<?php >
  $c = oci_connect('hr', 'welcome', 'localhost/XE');
  
  // Record the module
  oci_set_module_name($c, 'Home Page');
  
  // Code that causes a roundtrip, for example a query:
  $s = oci_parse($c, 'select * from dual');
  oci_execute($s);
  oci_fetch_all($s, $res);
  
  sleep(30);
?>

  // While the script is running, the administrator can see the
  // modules in use:
  
  sqlplus system/welcome
  SQL> select module from v$session;



|oci_set_action| |oci_set_client_info| |oci_set_client_identifier|

vim:ft=help:
