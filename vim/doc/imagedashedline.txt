*imagedashedline* -- Draw a dashed line

  bool imagedashedline(resource image, int x1, int y1, int x2, int y2, int color)~

This function is deprecated. Use combination of |imagesetstyle| and
|imageline| instead.

{ image}An image resource, returned by one of the image creation functions,
such as |imagecreatetruecolor|.

{x1} Upper left x coordinate.

{y1} Upper left y coordinate 0, 0 is the top left corner of the image.

{x2} Bottom right x coordinate.

{y2} Bottom right y coordinate.

{color} The fill color. A color identifier created with |imagecolorallocate|.

Always returns true

|imagedashedline| example

<?php >
  // Create a 100x100 image
  $im = imagecreatetruecolor(100, 100);
  $white = imagecolorallocate($im, 0xFF, 0xFF, 0xFF);
  
  // Draw a vertical dashed line
  imagedashedline($im, 50, 25, 50, 75, $white);
  
  // Save the image
  imagepng($im, './dashedline.png');
  imagedestroy($im);
?>

The above example will output something similar to:

Output of example : imagedashedline()

Alternative to |imagedashedline|

<?php >
  // Create a 100x100 image
  $im = imagecreatetruecolor(100, 100);
  $white = imagecolorallocate($im, 0xFF, 0xFF, 0xFF);
  
  // Define our style: First 4 pixels is white and the 
  // next 4 is transparent. This creates the dashed line effect
  $style = Array(
                  $white, 
                  $white, 
                  $white, 
                  $white, 
                  IMG_COLOR_TRANSPARENT, 
                  IMG_COLOR_TRANSPARENT, 
                  IMG_COLOR_TRANSPARENT, 
                  IMG_COLOR_TRANSPARENT
                  );
  
  imagesetstyle($im, $style);
  
  // Draw the dashed line
  imageline($im, 50, 25, 50, 75, IMG_COLOR_STYLED);
  
  // Save the image
  imagepng($im, './imageline.png');
  imagedestroy($im);
?>





|imagesetstyle| |imageline|

vim:ft=help:
