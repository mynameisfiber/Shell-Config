*session_start* -- Initialize session data

  bool session_start()~

|session_start| creates a session or resumes the current one based on a
session identifier passed via a GET or POST request, or passed via a cookie.

To use a named session, call |session_name| before calling |session_start|.

When session.use_trans_sid is enabled, the |session_start| function will
register an internal output handler for URL rewriting.

If a user uses ob_gzhandler or similar with |ob_start|, the function order is
important for proper output. For example, ob_gzhandler must be registered
before starting the session.

This function returns TRUE if a session was successfully started, otherwise
FALSE.

Version Description 5.3.0 If a session fails to start, then FALSE is returned.
Previously TRUE was returned. 4.3.3 As of PHP 4.3.3, calling |session_start|
after the session was previously started will result in an error of level
E_NOTICE. Also, the second session start will simply be ignored.

A session example: page1.php

<?php >
  // page1.php
  
  session_start();
  
  echo 'Welcome to page #1';
  
  $_SESSION['favcolor'] = 'green';
  $_SESSION['animal']   = 'cat';
  $_SESSION['time']     = time();
  
  // Works if session cookie was accepted
  echo '<br /><a href="page2.php">page 2</a>';
  
  // Or maybe pass along the session id, if needed
  echo '<br /><a href="page2.php?' . SID . '">page 2</a>';
?>





After viewing page1.php, the second page page2.php will magically contain the
session data. Read the session reference for information on propagating
session ids as it, for example, explains what the constant SID is all about.

A session example: page2.php

<?php >
  // page2.php
  
  session_start();
  
  echo 'Welcome to page #2<br />';
  
  echo $_SESSION['favcolor']; // green
  echo $_SESSION['animal'];   // cat
  echo date('Y m d H:i:s', $_SESSION['time']);
  
  // You may want to use SID here, like we did in page1.php
  echo '<br /><a href="page1.php">page 1</a>';
?>





To use cookie-based sessions, |session_start| must be called before outputing
anything to the browser.

Use of zlib.output_compression is recommended instead of |ob_gzhandler|

This function sends out several HTTP headers depending on the configuration.
See |session_cache_limiter| to customize these headers.

$_SESSION The session.auto_start configuration directive |session_id|

vim:ft=help:
