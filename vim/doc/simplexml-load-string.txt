*simplexml_load_string* -- Interprets a string of XML into an object

  object simplexml_load_string(string data [, string class_name [, int options [, string ns [, bool is_prefix]]]])~

Takes a well-formed XML string and returns it as an object.

{data} A well-formed XML string

{class_name} You may use this optional parameter so that
|simplexml_load_string| will return an object of the specified class. That
class should extend the SimpleXMLElement class.

{options} Since PHP 5.1.0 and Libxml 2.6.0, you may also use the {options}
parameter to specify additional Libxml parameters.

{ns}

{is_prefix}

Returns an object of class SimpleXMLElement with properties containing the
data held within the xml document. On errors, it will return FALSE.

Produces an E_WARNING error message for each error found in the XML data.

Use |libxml_use_internal_errors| to suppress all XML errors, and
|libxml_get_errors| to iterate over them afterwards.

Interpret an XML string

<?php >
  $string = <<<XML
  <?xml version='1.0'?> 
  <document>
   <title>Forty What?</title>
   <from>Joe</from>
   <to>Jane</to>
   <body>
    I know that's the answer -- but what's the question?
   </body>
  </document>
  XML;
  
  $xml = simplexml_load_string($string);
  
  print_r($xml);
?>

The above example will output:

  SimpleXMLElement Object
  (
    [title] => Forty What?
    [from] => Joe
    [to] => Jane
    [body] =>
     I know that's the answer -- but what's the question?
  )

At this point, you can go about using $xml->body and such.





|simplexml_load_file| SimpleXMLElement::__construct
|libxml_use_internal_errors|

vim:ft=help:
